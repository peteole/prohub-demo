{"version":3,"sources":["ProjectList/ProjectList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["projects","title","subtitle","content","ProjectList","GridList","map","project","GridListTile","GridListTileBar","App","navigationState","state","position","this","BottomNavigation","value","showLabels","onChange","ev","newVal","setState","BottomNavigationAction","label","icon","List","Settings","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAOMA,EAAoB,CACtB,CAACC,MAAM,SAAUC,SAAU,iDAAkDC,QAAS,2BACtF,CAACF,MAAO,UAAWC,SAAU,4CAA6CC,QAAS,qBACnF,CAACF,MAAO,UAAWC,SAAU,4CAA6CC,QAAS,sBAexEC,MAbf,WACE,OACE,cAACC,EAAA,EAAD,UACKL,EAASM,KAAI,SAAAC,GAAO,OACjB,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAiBR,MAAOM,EAAQN,MAAOC,SAAUK,EAAQL,WACzD,4BAAIK,EAAQJ,mBCWbO,E,kDArBb,WAAYC,GAAsB,IAAD,8BAC/B,cAAMA,IACDC,MAAM,CAAEC,SAAU,YAFQ,E,0CAIjC,WAAU,IAAD,OACDV,EAA6B,YAArBW,KAAKF,MAAMC,SAAqB,cAAC,EAAD,IAAe,8CAC7D,OACE,gCACGV,EACD,eAACY,EAAA,EAAD,CAAkBC,MAAOF,KAAKF,MAAMC,SAAUI,YAAU,EACtDC,SAAU,SAACC,EAAIC,GACb,EAAKC,SAAS,CAAER,SAAUO,KAF9B,UAIE,cAACE,EAAA,EAAD,CAAwBC,MAAM,WAAWP,MAAM,WAAWQ,KAAM,cAACC,EAAA,EAAD,MAChE,cAACH,EAAA,EAAD,CAAwBC,MAAM,WAAWP,MAAM,WAAWQ,KAAM,cAACE,EAAA,EAAD,gB,GAhBxDC,IAAMC,WCQTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a18d51e.chunk.js","sourcesContent":["import React from 'react';\nimport { GridList, GridListTile, GridListTileBar } from '@material-ui/core'\ninterface Project{\n    title:string\n    subtitle: string\n    content: string\n}\nconst projects: Project[]=[\n    {title:\"ProHub\", subtitle: \"Project hub for bringing TUM students together\", content: \"loooooong story to tell\"},\n    {title: \"Digipen\", subtitle: \"Digital pen to write on non touch laptops\", content: \"Not easier either\"},\n    {title: \"Digipen\", subtitle: \"Digital pen to write on non touch laptops\", content: \"Not easier either\"}\n]\nfunction ProjectList() {\n  return (\n    <GridList>\n        {projects.map(project=>(\n            <GridListTile>\n                <GridListTileBar title={project.title} subtitle={project.subtitle}/>\n                <p>{project.content}</p>\n            </GridListTile>\n        ))}\n    </GridList>\n  );\n}\n\nexport default ProjectList;","import React from 'react';\nimport { BottomNavigation, BottomNavigationAction } from '@material-ui/core'\nimport { List, Settings } from '@material-ui/icons'\nimport './App.css';\nimport ProjectList from './ProjectList/ProjectList';\n\nclass App extends React.Component<{}, { position: \"projects\" | \"settings\" }> {\n\n  constructor(navigationState: {}) {\n    super(navigationState)\n    this.state={ position: 'projects' }\n  }\n  render() {\n    const content=this.state.position=='projects'?<ProjectList/>:<p>some settings</p>\n    return (\n      <div>\n        {content}\n        <BottomNavigation value={this.state.position} showLabels\n          onChange={(ev, newVal) => {\n            this.setState({ position: newVal })\n          }}>\n          <BottomNavigationAction label=\"Projects\" value=\"projects\" icon={<List />} />\n          <BottomNavigationAction label=\"Settings\" value=\"settings\" icon={<Settings />} />\n        </BottomNavigation>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}